import sqlite3

from aiogram import types

from keyboards.adjustment_keyboards import adjustment_keyboard
from system.dispatcher import bot
from system.dispatcher import dp
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State


class YourState(StatesGroup):
    ID_INPUT = State()


@dp.callback_query_handler(lambda c: c.data == 'correction_of_reports_key')
async def adjustment_record_handler(callback_query: types.CallbackQuery, state: FSMContext):
    """–í—ã–±–æ—Ä –≤–∞—Ä–∏–∞–Ω—Ç–∞ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏"""
    await state.finish()
    await state.reset_state()  # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
    greeting_post = ("–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è ‚ùå –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ –≤ –æ—Ç—á–µ—Ç–µ üìù.\n\n\n"
                     "<b>–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ üîô –≤ –Ω–∞—á–∞–ª–æ –Ω–∞–∂–º–∏—Ç–µ</b> /start")
    adjustment_key = adjustment_keyboard()  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    # –ü–æ–ª—É—á–∏—Ç—å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞ –∏–∑ callback_query
    chat_id = callback_query.message.chat.id
    # –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç, –∏—Å–ø–æ–ª—å–∑—É—è –ø–æ–ª—É—á–µ–Ω–Ω—ã–π chat_id
    await bot.send_message(chat_id, greeting_post, reply_markup=adjustment_key, disable_web_page_preview=True,
                           parse_mode=types.ParseMode.HTML)


@dp.callback_query_handler(lambda c: c.data == 'for_tomorrow_key')
async def adjustment_record_for_tomorrow_handler(callback_query: types.CallbackQuery, state: FSMContext):
    """–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –Ω–∞ –∑–∞–≤—Ç—Ä–∞"""
    await state.finish()
    await state.reset_state()
    greeting_post = ("–í–≤–µ–¥–∏—Ç–µ ID –∑–∞–ø–∏—Å–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ –≤ –æ—Ç—á–µ—Ç–µ üìù –ù–ê –ó–ê–í–¢–†–ê üóì.\n\n\n"
                     "<b>–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ üîô –≤ –Ω–∞—á–∞–ª–æ –Ω–∞–∂–º–∏—Ç–µ</b> /start")
    await bot.send_message(callback_query.from_user.id, greeting_post)
    await YourState.ID_INPUT.set()  # –ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ–∂–∏–¥–∞–Ω–∏—é –≤–≤–æ–¥–∞ ID


@dp.callback_query_handler(lambda c: c.data == 'today_key')
async def adjustment_record_for_tomorrow_handler(callback_query: types.CallbackQuery, state: FSMContext):
    """–ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –Ω–∞ –∑–∞–≤—Ç—Ä–∞"""
    await state.finish()
    await state.reset_state()
    greeting_post = ("–í–≤–µ–¥–∏—Ç–µ ID –∑–∞–ø–∏—Å–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ –≤ –æ—Ç—á–µ—Ç–µ üìù –ó–ê –°–ï–ì–û–î–ù–Ø üóì.\n\n\n"
                     "<b>–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ üîô –≤ –Ω–∞—á–∞–ª–æ –Ω–∞–∂–º–∏—Ç–µ</b> /start")
    await bot.send_message(callback_query.from_user.id, greeting_post)
    await YourState.ID_INPUT.set()  # –ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ–∂–∏–¥–∞–Ω–∏—é –≤–≤–æ–¥–∞ ID


@dp.message_handler(state=YourState.ID_INPUT)
async def process_record_update(message: types.Message, state: FSMContext):
    try:
        record_id = int(message.text)
        conn = sqlite3.connect('database/database.db')
        cursor = conn.cursor()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∑–∞–ø–∏—Å—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID
        cursor.execute(f"SELECT * FROM reports WHERE id_number = {record_id}")
        record = cursor.fetchone()

        if record:
            # SQL-–∑–∞–ø—Ä–æ—Å –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–ª–æ–Ω–∫–∏ record_check
            update_query = "UPDATE reports SET record_check = ? WHERE id_number = ?"
            cursor.execute(update_query, ("bad", record_id))
            conn.commit()
            greeting_post = (f"–ó–∞–ø–∏—Å–∏ —Å ID {record_id} –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ 'bad'.\n\n\n"
                             "<b>–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ üîô –≤ –Ω–∞—á–∞–ª–æ –Ω–∞–∂–º–∏—Ç–µ</b> /start")
            await message.answer(greeting_post)
        else:
            del_post = ("–ó–∞–ø–∏—Å–∏ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID.\n\n\n"
                        "<b>–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ üîô –≤ –Ω–∞—á–∞–ª–æ –Ω–∞–∂–º–∏—Ç–µ</b> /start")
            await message.answer(del_post)

        conn.close()
    except ValueError:
        greeting_post_error = ("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ.\n\n\n"
                               "<b>–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ üîô –≤ –Ω–∞—á–∞–ª–æ –Ω–∞–∂–º–∏—Ç–µ</b> /start")
        await message.answer(greeting_post_error)
    finally:
        await state.finish()


def adjustment_registry_handler():
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏"""
    dp.register_callback_query_handler(adjustment_record_handler)
    dp.register_callback_query_handler(adjustment_record_for_tomorrow_handler)
